include:
  - docker-compose.auth.yml
services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - http_proxy
      - https_proxy
      - CLUSTER_NAME=ezmesure
      - EZMESURE_ES_PUBLISH
      - EZMESURE_ES_NODE_NAME
      - EZMESURE_ES_DISCOVERY
      - EZMESURE_ES_DISCOVERY_TYPE
      - EZMESURE_ES_NODE_MASTER
      - EZMESURE_ES_NODE_DATA
      - EZMESURE_ES_NODE_INGEST
      - EZMESURE_ES_NODE_SEARCH_REMOTE
      - EZMESURE_ES_INITIAL_MASTER_NODES
      - EZMESURE_SMTP_HOST
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS
      - xpack.security.authc.api_key.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./data/elastic/data:/usr/share/elasticsearch/data"
      - "./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "./elasticsearch/config/certificates:/usr/share/elasticsearch/config/x-pack/certificates"
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    ports:
      - 5601:5601
    environment:
      - http_proxy
      - https_proxy
      - no_proxy=legacy-reporting
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_USERNAME=${KIBANA_USERNAME:-kibana_system}
      - SERVER_BASEPATH
      - SERVER_PUBLICBASEURL=https://${EZMESURE_DOMAIN}${SERVER_BASEPATH}
      - SERVER_DEFAULTROUTE=/app/dashboards
      - THIS_HOST
      - ELASTICSEARCH_HOSTS
      - XPACK_MONITORING_ENABLED
      - KIBANA_DEFAULTAPPID
      - XPACK_REPORTING_KIBANASERVER_HOSTNAME
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - "./kibana/config/certificates:/usr/share/kibana/config/x-pack/certificates"
    restart: unless-stopped

  redis:
    image: redis:6.2.6-alpine3.15
    command: --requirepass "${EZMESURE_REDIS_PASSWORD:-changeme}"
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:4.0.7-alpine
    restart: unless-stopped
    user: rabbitmq
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.d:/etc/rabbitmq/definitions.d
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres:15.1-alpine3.16
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${EZMESURE_POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${EZMESURE_POSTGRES_PASSWORD:-changeme}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: ${POSTGRES_HEALTHCHECK_INTERVAL:-10s}
      timeout: ${POSTGRES_HEALTHCHECK_TIMEOUT:-5s}
      retries: ${POSTGRES_HEALTHCHECK_RETRIES:-5}

  rp:
    image: nginx:1.29.1-alpine-slim
    ports:
      - 8443:443
      - 8880:80
    environment:
      - http_proxy
      - https_proxy

      - NGINX_RESOLVER=${NGINX_RESOLVER:-127.0.0.11}
      - NGINX_PROTOCOL=${NGINX_PROTOCOL:-https}

      - EZMESURE_DOMAIN
      - SATOSA_DOMAIN

      - SATOSA_HOST=satosa:8080
      - AUTH_HOST=auth:5556
      - FRONT_HOST=front:8080
      - API_HOST=api:3000
      - KIBANA_HOST=kibana:5601
      - REPORT_HOST=reporting:8080
    volumes:
      - ./rp/templates:/etc/nginx/templates
      - ./rp/certs:/etc/nginx/ssl
    restart: unless-stopped

  reporting:
    image: ghcr.io/ezpaarse-project/ezreeport-aio:rc
    environment:
      # proxy
      - http_proxy
      - https_proxy
      - no_proxy=${no_proxy},localhost,postgres,rabbitmq

      # ports
      - API_HTTP_PORT=8080
      - WORKER_HTTP_PORT=8180
      - SCHEDULER_HTTP_PORT=8280
      - MAIL_HTTP_PORT=8380
      - FILES_HTTP_PORT=8480

      # rabbitmq
      - RABBITMQ_PROTOCOL=${EZMESURE_RABBITMQ_PROTOCOL:-amqp}
      - RABBITMQ_HOST=${EZMESURE_RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_PORT=${EZMESURE_RABBITMQ_PORT:-5672}
      - RABBITMQ_VHOST=${EZREEPORT_RABBITMQ_VHOST}
      - RABBITMQ_USERNAME=${EZREEPORT_RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${EZREEPORT_RABBITMQ_PASSWORD}

      # elastic
      - ELASTIC_URL=${EZMESURE_ELASTIC_SCHEME:-https}://${EZMESURE_ELASTIC_HOST:-elastic}:${EZMESURE_ELASTIC_PORT:-9200}
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTIC_REQUIRED_STATUS=${ELASTIC_REQUIRED_STATUS}

      # database
      - DATABASE_URL=postgresql://${EZMESURE_POSTGRES_USER:-postgres}:${EZMESURE_POSTGRES_PASSWORD:-changeme}@${EZMESURE_POSTGRES_HOST:-postgres}:${EZMESURE_POSTGRES_PORT:-5432}/${EZREEPORT_POSTGRES_DB:-ezreeport}?schema=public

      # api vars
      - APIS_CONCURRENCE=${EZREEPORT_API_CONCURRENCE:-1}
      - ALLOWED_ORIGINS=${EZREEPORT_API_ALLOWED_ORIGINS}
      - ADMIN_KEY=${EZREEPORT_REPORT_ADMIN_KEY}
      - DEFAULT_TEMPLATE_NAME=${EZREEPORT_DEFAULT_TEMPLATE_NAME:-scratch}
      - DEFAULT_TEMPLATE_DATEFIELD=${EZREEPORT_DEFAULT_TEMPALTE_DATEFIELD:-datetime}

      # worker vars
      - WORKERS_CONCURRENCE=${EZREEPORT_WORKERS_CONCURRENCE:-5}
      - FETCHER_BANNED_DOMAINS=${EZREEPORT_FETCHER_BANNED_DOMAINS}
      - ITERATIONS_TO_LIVE=${EZREEPORT_REPORT_ITERATIONS_TO_LIVE}
      - DAYS_TO_LIVE=${EZREEPORT_REPORT_DAYS_TO_LIVE}
      - EMAIL_DEV_TEAM=${EZREEPORT_EMAIL_DEV_TEAM}

      # scheduler vars
      - TIMER_GENERATE_REPORT=${EZREEPORT_TIMER_GENERATE_REPORT}
      - TIMER_PURGE_OLD_REPORT=${EZREEPORT_TIMER_PURGE_OLD_REPORT}

      # mail vars
      - MAILS_CONCURRENCE=${EZREEPORT_MAILS_CONCURRENCE:-1}
      - SMTP_HOST=${EZMESURE_SMTP_HOST}
      - SMTP_PORT=${EZMESURE_SMTP_PORT}
      - SMTP_IGNORE_TLS=${EZMESURE_SMTP_IGNORE_TLS:-true}
      - SMTP_REJECT_UNAUTHORIZED=${EZMESURE_SMTP_REJECT_UNAUTHORIZED:-false}
      - EMAIL_SENDER=${EZREEPORT_MAIL_SENDER}
      - EMAIL_SUPPORT_TEAM=${EZREEPORT_MAIL_DEV_TEAM}
      - EMAIL_ATTEMPTS=${EZREEPORT_MAIL_ATTEMPTS}
      - EMAIL_ATTEMPTS_INTERVAL=${EZREEPORT_MAIL_ATTEMPTS_INTERVAL}

      # files var
      - FILES_CONCURRENCE=${EZREEPORT_FILES_CONCURRENCE:-1}
      - PATHS_REPORT=${EZREEPORT_PATHS_REPORT}
      - PATHS_DB=${EZREEPORT_PATHS_DB}

      # common
      - NODE_ENV
      - TZ=${EZREEPORT_TZ}
      - HEARTBEAT_FREQUENCY=${EZREEPORT_HEARTBEAT_FREQUENCY:-10000}
      - LOG_LEVEL=${EZREEPORT_LOG_LEVEL:-info}
      - LOG_DIR=${EZREEPORT_LOG_DIR}
      - LOG_IGNORE=${EZREEPORT_LOG_IGNORE}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./data/ezreeport/reports:${EZREEPORT_PATHS_REPORT:-/data/ezreeport/reports} # Report output
      - ./data/ezreeport/db:${EZREEPORT_PATHS_DB:-/data/ezreeport/db} # DB of reports files
    restart: unless-stopped
